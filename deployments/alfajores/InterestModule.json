{
  "address": "0xc075BC0f734EFE6ceD866324fc2A9DBe1065CBB1",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "ChangeRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currencyAmount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "Deny",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "what",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "File",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currencyAmount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "Rely",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "SetRate",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        }
      ],
      "name": "accrue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "changeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interestBearingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ratePerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        }
      ],
      "name": "chargeInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chi",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ratePerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pie",
          "type": "uint256"
        }
      ],
      "name": "compounding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        }
      ],
      "name": "debt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currencyAmount",
          "type": "uint256"
        }
      ],
      "name": "decDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "deny",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "what",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "file",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currencyAmount",
          "type": "uint256"
        }
      ],
      "name": "incDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ratePerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixedRate",
          "type": "uint256"
        }
      ],
      "name": "newLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pie",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "rateDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pie",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "chi",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ratePerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "lastUpdated",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "fixedRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "rdiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "rely",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "rmul",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "base",
          "type": "uint256"
        }
      ],
      "name": "rpow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "safeAdd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "safeDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "safeMul",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "safeSub",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loan",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chi",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pie",
          "type": "uint256"
        }
      ],
      "name": "toAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chi",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "toPie",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe05fc82a2ac1c3af45ddabaf6068205dc8a291ff08bc5dcc958d13e0d0d2dd2b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xc075BC0f734EFE6ceD866324fc2A9DBe1065CBB1",
    "transactionIndex": 1,
    "gasUsed": "1381988",
    "logsBloom": "0x
    "blockHash": "0xece635f22f2702d86255f4b834d87e595a81c03c8da8116de802964ca8195f3c",
    "transactionHash": "0xe05fc82a2ac1c3af45ddabaf6068205dc8a291ff08bc5dcc958d13e0d0d2dd2b",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 12118932,
        "transactionHash": "0xe05fc82a2ac1c3af45ddabaf6068205dc8a291ff08bc5dcc958d13e0d0d2dd2b",
        "address": "0xc075BC0f734EFE6ceD866324fc2A9DBe1065CBB1",
        "topics": [
          "0xdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a60",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xece635f22f2702d86255f4b834d87e595a81c03c8da8116de802964ca8195f3c"
      }
    ],
    "blockNumber": 12118932,
    "cumulativeGasUsed": "2826729",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "53b6ffb1bd1b7c2638ada6f662306126",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"ChangeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currencyAmount\",\"type\":\"uint256\"}],\"name\":\"DecreaseDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currencyAmount\",\"type\":\"uint256\"}],\"name\":\"IncreaseDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"SetRate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"}],\"name\":\"accrue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"changeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interestBearingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ratePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"name\":\"chargeInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ratePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pie\",\"type\":\"uint256\"}],\"name\":\"compounding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"}],\"name\":\"debt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currencyAmount\",\"type\":\"uint256\"}],\"name\":\"decDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currencyAmount\",\"type\":\"uint256\"}],\"name\":\"incDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ratePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedRate\",\"type\":\"uint256\"}],\"name\":\"newLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pie\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"rateDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pie\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ratePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"lastUpdated\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"fixedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"rdiv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"rmul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"base\",\"type\":\"uint256\"}],\"name\":\"rpow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pie\",\"type\":\"uint256\"}],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toPie\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Interest/InterestModule.sol\":\"InterestModule\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@1754-factory/packages/src/auth/auth.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n// Copyright (C) Centrifuge 2020, based on MakerDAO dss https://github.com/makerdao/dss\\npragma solidity ^0.8.10;\\n\\ncontract Auth {\\n    mapping (address => uint256) public wards;\\n    \\n    event Rely(address indexed usr);\\n    event Deny(address indexed usr);\\n\\n    function rely(address usr) external auth {\\n        wards[usr] = 1;\\n        emit Rely(usr);\\n    }\\n    function deny(address usr) external auth {\\n        wards[usr] = 0;\\n        emit Deny(usr);\\n    }\\n\\n    modifier auth {\\n        require(wards[msg.sender] == 1, \\\"not-authorized\\\");\\n        _;\\n    }\\n\\n}\",\"keccak256\":\"0xf89221c8332fe09abb3b0b73216d422b5827098de928a59e578e9e6d05d5aaa6\",\"license\":\"AGPL-3.0-only\"},\"@1754-factory/packages/src/math/interest.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n// Copyright (C) 2018 Rain <rainbreak@riseup.net> and Centrifuge, referencing MakerDAO dss => https://github.com/makerdao/dss/blob/master/src/pot.sol\\npragma solidity ^0.8.10;\\n\\nimport \\\"./math.sol\\\";\\n\\ncontract Interest is Math {\\n    // @notice This function provides compounding in seconds\\n    // @param chi Accumulated interest rate over time\\n    // @param ratePerSecond Interest rate accumulation per second in RAD(10\\u02c627)\\n    // @param lastUpdated When the interest rate was last updated\\n    // @param pie Total sum of all amounts accumulating under one interest rate, divided by that rate\\n    // @return The new accumulated rate, as well as the difference between the debt calculated with the old and new accumulated rates.\\n    function compounding(uint chi, uint ratePerSecond, uint lastUpdated, uint pie) public view returns (uint, uint) {\\n        require(block.timestamp >= lastUpdated, \\\"tinlake-math/invalid-timestamp\\\");\\n        require(chi != 0);\\n        // instead of a interestBearingAmount we use a accumulated interest rate index (chi)\\n        uint updatedChi = _chargeInterest(chi ,ratePerSecond, lastUpdated, block.timestamp);\\n        return (updatedChi, safeSub(rmul(updatedChi, pie), rmul(chi, pie)));\\n    }\\n\\n    // @notice This function charge interest on a interestBearingAmount\\n    // @param interestBearingAmount is the interest bearing amount\\n    // @param ratePerSecond Interest rate accumulation per second in RAD(10\\u02c627)\\n    // @param lastUpdated last time the interest has been charged\\n    // @return interestBearingAmount + interest\\n    function chargeInterest(uint interestBearingAmount, uint ratePerSecond, uint lastUpdated) public view returns (uint) {\\n        if (block.timestamp >= lastUpdated) {\\n            interestBearingAmount = _chargeInterest(interestBearingAmount, ratePerSecond, lastUpdated, block.timestamp);\\n        }\\n        return interestBearingAmount;\\n    }\\n\\n    function _chargeInterest(uint interestBearingAmount, uint ratePerSecond, uint lastUpdated, uint current) internal pure returns (uint) {\\n        return rmul(rpow(ratePerSecond, current - lastUpdated, ONE), interestBearingAmount);\\n    }\\n\\n\\n    // convert pie to debt/savings amount\\n    function toAmount(uint chi, uint pie) public pure returns (uint) {\\n        return rmul(pie, chi);\\n    }\\n\\n    // convert debt/savings amount to pie\\n    function toPie(uint chi, uint amount) public pure returns (uint) {\\n        return rdivup(amount, chi);\\n    }\\n\\n    function rpow(uint x, uint n, uint base) public pure returns (uint z) {\\n        assembly {\\n            switch x case 0 {switch n case 0 {z := base} default {z := 0}}\\n            default {\\n                switch mod(n, 2) case 0 { z := base } default { z := x }\\n                let half := div(base, 2)  // for rounding.\\n                for { n := div(n, 2) } n { n := div(n,2) } {\\n                let xx := mul(x, x)\\n                if iszero(eq(div(xx, x), x)) { revert(0,0) }\\n                let xxRound := add(xx, half)\\n                if lt(xxRound, xx) { revert(0,0) }\\n                x := div(xxRound, base)\\n                if mod(n,2) {\\n                    let zx := mul(z, x)\\n                    if and(iszero(iszero(x)), iszero(eq(div(zx, x), z))) { revert(0,0) }\\n                    let zxRound := add(zx, half)\\n                    if lt(zxRound, zx) { revert(0,0) }\\n                    z := div(zxRound, base)\\n                }\\n            }\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0xf1d8f70f9e036d12495fc9a1cb131db6c41c9e0a21dea4b05528ac6322296c02\",\"license\":\"AGPL-3.0-only\"},\"@1754-factory/packages/src/math/math.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n// Copyright (C) 2018 Rain <rainbreak@riseup.net>\\npragma solidity ^0.8.10;\\n\\ncontract Math {\\n    uint256 constant ONE = 10 ** 27;\\n\\n    function safeAdd(uint x, uint y) public pure returns (uint z) {\\n        require((z = x + y) >= x, \\\"safe-add-failed\\\");\\n    }\\n\\n    function safeSub(uint x, uint y) public pure returns (uint z) {\\n        require((z = x - y) <= x, \\\"safe-sub-failed\\\");\\n    }\\n\\n    function safeMul(uint x, uint y) public pure returns (uint z) {\\n        require(y == 0 || (z = x * y) / y == x, \\\"safe-mul-failed\\\");\\n    }\\n\\n    function safeDiv(uint x, uint y) public pure returns (uint z) {\\n        z = x / y;\\n    }\\n\\n    function rmul(uint x, uint y) public pure returns (uint z) {\\n        z = safeMul(x, y) / ONE;\\n    }\\n\\n    function rdiv(uint x, uint y) public pure returns (uint z) {\\n        require(y > 0, \\\"division by zero\\\");\\n        z = safeAdd(safeMul(x, ONE), y / 2) / y;\\n    }\\n\\n    function rdivup(uint x, uint y) internal pure returns (uint z) {\\n        require(y > 0, \\\"division by zero\\\");\\n        // always rounds up\\n        z = safeAdd(safeMul(x, ONE), safeSub(y, 1)) / y;\\n    }\\n\\n\\n}\",\"keccak256\":\"0x235202c8d7d318ea56c42ac396b9e6d723eba51b155b9f57727d177e8626390c\",\"license\":\"AGPL-3.0-only\"},\"src/Interest/InterestModule.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n// Copyright (C) 2018  Rain <rainbreak@riseup.net>, Centrifuge\\npragma solidity ^0.8.13;\\n\\nimport \\\"@1754-factory/packages/src/math/interest.sol\\\";\\nimport \\\"@1754-factory/packages/src/auth/auth.sol\\\";\\n\\n// ## Interest Group based Pile\\n// The following is one implementation of a debt module. It keeps track of different buckets of interest rates and is optimized for many loans per interest bucket. It keeps track of interest\\n// rate accumulators (chi values) for all interest rate categories. It calculates debt each\\n// loan according to its interest rate category and pie value.\\ncontract InterestModule is Auth, Interest {\\n    // --- Data ---\\n\\n    // stores all needed information of an interest rate group\\n    struct Rate {\\n        uint256 pie; // Total debt of all loans with this rate\\n        uint256 chi; // Accumulated rates\\n        uint256 ratePerSecond; // Accumulation per second\\n        uint48 lastUpdated; // Last time the rate was accumulated\\n        uint256 fixedRate; // fixed rate applied to each loan of the group\\n    }\\n\\n    // Interest Rate Groups are identified by a `uint` and stored in a mapping\\n    mapping(uint256 => Rate) public rates;\\n\\n    // mapping of all loan debts\\n    // the debt is stored as pie\\n    // pie is defined as pie = debt/chi therefore debt = pie * chi\\n    // where chi is the accumulated interest rate index over time\\n    mapping(uint256 => uint256) public pie;\\n    // loan => rate\\n    mapping(uint256 => uint256) public loanRates;\\n\\n    // Events\\n    event IncreaseDebt(uint256 indexed loan, uint256 currencyAmount);\\n    event DecreaseDebt(uint256 indexed loan, uint256 currencyAmount);\\n    event SetRate(uint256 indexed loan, uint256 rate);\\n    event ChangeRate(uint256 indexed loan, uint256 newRate);\\n    event File(bytes32 indexed what, uint256 rate, uint256 value);\\n\\n    constructor() {\\n        // pre-definition for loans without interest rates\\n        rates[0].chi = ONE;\\n        rates[0].ratePerSecond = ONE;\\n\\n        wards[msg.sender] = 1;\\n        emit Rely(msg.sender);\\n    }\\n\\n    // --- Public Debt Methods  ---\\n    // increases the debt of a loan by a currencyAmount\\n    // a change of the loan debt updates the rate debt and total debt\\n    function incDebt(uint256 loan, uint256 currencyAmount) external auth {\\n        uint256 rate = loanRates[loan];\\n        require(\\n            block.timestamp == rates[rate].lastUpdated,\\n            \\\"rate-group-not-updated\\\"\\n        );\\n        currencyAmount = (currencyAmount +\\n            rmul(currencyAmount, rates[rate].fixedRate));\\n        uint256 pieAmount = toPie(rates[rate].chi, currencyAmount);\\n\\n        pie[loan] = (pie[loan] + pieAmount);\\n        rates[rate].pie = (rates[rate].pie + pieAmount);\\n\\n        emit IncreaseDebt(loan, currencyAmount);\\n    }\\n\\n    // decrease the loan's debt by a currencyAmount\\n    // a change of the loan debt updates the rate debt and total debt\\n    function decDebt(uint256 loan, uint256 currencyAmount) external auth {\\n        uint256 rate = loanRates[loan];\\n        require(\\n            block.timestamp == rates[rate].lastUpdated,\\n            \\\"rate-group-not-updated\\\"\\n        );\\n        uint256 pieAmount = toPie(rates[rate].chi, currencyAmount);\\n\\n        pie[loan] = (pie[loan] + pieAmount);\\n        rates[rate].pie = (rates[rate].pie + pieAmount);\\n\\n        emit DecreaseDebt(loan, currencyAmount);\\n    }\\n\\n    // returns the current debt based on actual block.timestamp (now)\\n    function debt(uint256 loan) external view returns (uint256) {\\n        uint256 rate_ = loanRates[loan];\\n        uint256 chi_ = rates[rate_].chi;\\n        if (block.timestamp >= rates[rate_].lastUpdated) {\\n            chi_ = chargeInterest(\\n                rates[rate_].chi,\\n                rates[rate_].ratePerSecond,\\n                rates[rate_].lastUpdated\\n            );\\n        }\\n        return toAmount(chi_, pie[loan]);\\n    }\\n\\n    // returns the total debt of a interest rate group\\n    function rateDebt(uint256 rate) external view returns (uint256) {\\n        uint256 chi_ = rates[rate].chi;\\n        uint256 pie_ = rates[rate].pie;\\n\\n        if (block.timestamp >= rates[rate].lastUpdated) {\\n            chi_ = chargeInterest(\\n                rates[rate].chi,\\n                rates[rate].ratePerSecond,\\n                rates[rate].lastUpdated\\n            );\\n        }\\n        return toAmount(chi_, pie_);\\n    }\\n\\n    // --- Interest Rate Group Implementation ---\\n\\n    // set rate loanRates for a loan\\n    function setRate(uint256 loan, uint256 rate) external auth {\\n        require(pie[loan] == 0, \\\"non-zero-debt\\\");\\n        // rate category has to be initiated\\n        require(rates[rate].chi != 0, \\\"rate-group-not-set\\\");\\n        loanRates[loan] = rate;\\n        emit SetRate(loan, rate);\\n    }\\n\\n    // change rate loanRates for a loan\\n    function changeRate(uint256 loan, uint256 newRate) external auth {\\n        require(rates[newRate].chi != 0, \\\"rate-group-not-set\\\");\\n        uint256 currentRate = loanRates[loan];\\n        drip(currentRate);\\n        drip(newRate);\\n        uint256 pie_ = pie[loan];\\n        uint256 debt_ = toAmount(rates[currentRate].chi, pie_);\\n        rates[currentRate].pie = (rates[currentRate].pie + pie_);\\n        pie[loan] = toPie(rates[newRate].chi, debt_);\\n        rates[newRate].pie = (rates[newRate].pie + pie[loan]);\\n        loanRates[loan] = newRate;\\n        emit ChangeRate(loan, newRate);\\n    }\\n\\n    function newLoan(\\n        uint256 loan,\\n        uint256 ratePerSecond,\\n        uint256 fixedRate\\n    ) external auth {\\n        rates[loan].chi = ONE;\\n        rates[loan].lastUpdated = uint48(block.timestamp);\\n        rates[loan].ratePerSecond = ratePerSecond;\\n        rates[loan].fixedRate = fixedRate;\\n        loanRates[loan] = loan;\\n    }\\n\\n    // set/change the interest rate of a rate category\\n    function file(\\n        bytes32 what,\\n        uint256 rate,\\n        uint256 value\\n    ) external auth {\\n        if (what == \\\"rate\\\") {\\n            require(value != 0, \\\"rate-per-second-can-not-be-0\\\");\\n            if (rates[rate].chi == 0) {\\n                rates[rate].chi = ONE;\\n                rates[rate].lastUpdated = uint48(block.timestamp);\\n            } else {\\n                drip(rate);\\n            }\\n            rates[rate].ratePerSecond = value;\\n        } else if (what == \\\"fixedRate\\\") {\\n            rates[rate].fixedRate = value;\\n        } else revert(\\\"unknown parameter\\\");\\n\\n        emit File(what, rate, value);\\n    }\\n\\n    // accrue needs to be called before any debt amounts are modified by an external component\\n    function accrue(uint256 loan) external {\\n        drip(loanRates[loan]);\\n    }\\n\\n    // drip updates the chi of the rate category by compounding the interest and\\n    // updates the total debt\\n    function drip(uint256 rate) public {\\n        if (block.timestamp >= rates[rate].lastUpdated) {\\n            (uint256 chi, ) = compounding(\\n                rates[rate].chi,\\n                rates[rate].ratePerSecond,\\n                rates[rate].lastUpdated,\\n                rates[rate].pie\\n            );\\n            rates[rate].chi = chi;\\n            rates[rate].lastUpdated = uint48(block.timestamp);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xde0c958532e108b9ceb27b2ce7ea8e6fb93e9885263c4b604d3d2fa5b9a2c09b\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506b033b2e3c9fd0803ce80000007fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a8190557fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4b553360008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a26116f0806100ac6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c8063744f4cf6116100f9578063b5931f7c11610097578063d7affae311610071578063d7affae3146103af578063dd418ae2146103c2578063e4064a7714610439578063e6cb90131461046157600080fd5b8063b5931f7c14610369578063bf353dbb1461037c578063d05c78da1461039c57600080fd5b80639c52a7f1116100d35780639c52a7f11461031d5780639e1aaae614610330578063a293d1e814610343578063a883b0c41461035657600080fd5b8063744f4cf6146102d757806386c1762a146102ea5780639717411d146102fd57600080fd5b806328a7996f1161016657806358326b7a1161014057806358326b7a1461028b57806365fae35e1461029e57806367457022146102b157806367b870af146102c457600080fd5b806328a7996f1461025257806329a8f4f81461026557806346df2ccb1461027857600080fd5b80631e0029c8116101975780631e0029c8146102195780631ec9f27b1461022c5780632047a2671461023f57600080fd5b806301aa8a6e146101be578063071ffb3c146101f15780630e2286d314610206575b600080fd5b6101de6101cc366004611515565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6102046101ff36600461152e565b610474565b005b6101de61021436600461152e565b610628565b6101de610227366004611515565b6106af565b61020461023a366004611550565b61073b565b61020461024d36600461152e565b61080d565b6101de61026036600461152e565b610987565b6101de610273366004611550565b610999565b61020461028636600461152e565b6109b9565b610204610299366004611515565b610b25565b6102046102ac36600461157c565b610bc8565b6101de6102bf36600461152e565b610c79565b6101de6102d2366004611550565b610c92565b6102046102e5366004611515565b610d50565b6101de6102f8366004611515565b610d68565b6101de61030b366004611515565b60026020526000908152604090205481565b61020461032b36600461157c565b610dd4565b6101de61033e36600461152e565b610e84565b6101de61035136600461152e565b610e90565b61020461036436600461152e565b610eee565b6101de61037736600461152e565b6110c6565b6101de61038a36600461157c565b60006020819052908152604090205481565b6101de6103aa36600461152e565b6110d2565b6102046103bd366004611550565b611142565b6104096103d0366004611515565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909165ffffffffffff9091169085565b6040805195865260208601949094529284019190915265ffffffffffff166060830152608082015260a0016101e8565b61044c6104473660046115b2565b611377565b604080519283526020830191909152016101e8565b6101de61046f36600461152e565b61140d565b336000908152602081905260409020546001146104d85760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064015b60405180910390fd5b6000828152600360208181526040808420548085526001909252909220015465ffffffffffff16421461054d5760405162461bcd60e51b815260206004820152601660248201527f726174652d67726f75702d6e6f742d757064617465640000000000000000000060448201526064016104cf565b60008181526001602052604090206004015461056a908390610c79565b6105749083611613565b600082815260016020819052604082200154919350906105949084610987565b6000858152600260205260409020549091506105b1908290611613565b6000858152600260209081526040808320939093558482526001905220546105da908290611613565b600083815260016020908152604091829020929092555184815285917f4656f63d6d86ffd6679877563f6832dff83d72eb09acf31f29018beaad47ef0e91015b60405180910390a250505050565b60008082116106795760405162461bcd60e51b815260206004820152601060248201527f6469766973696f6e206279207a65726f0000000000000000000000000000000060448201526064016104cf565b8161069e610693856b033b2e3c9fd0803ce80000006110d2565b61046f60028661162b565b6106a8919061162b565b9392505050565b60008181526003602081815260408084205480855260019283905290842091820154919092015465ffffffffffff164210610719576000828152600160208190526040909120908101546002820154600390920154610716929065ffffffffffff16610999565b90505b600084815260026020526040902054610733908290610e84565b949350505050565b3360009081526020819052604090205460011461079a5760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b60008381526001602081815260408084206b033b2e3c9fd0803ce800000093810193909355600380840180547fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000164265ffffffffffff161790556002840196909655600490920193909355929091522055565b3360009081526020819052604090205460011461086c5760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b6000828152600360208181526040808420548085526001909252909220015465ffffffffffff1642146108e15760405162461bcd60e51b815260206004820152601660248201527f726174652d67726f75702d6e6f742d757064617465640000000000000000000060448201526064016104cf565b6000818152600160208190526040822001546108fd9084610987565b60008581526002602052604090205490915061091a908290611613565b600085815260026020908152604080832093909355848252600190522054610943908290611613565b600083815260016020908152604091829020929092555184815285917fb8b26d9635bdf66575907fb44682641f476b48fb70ad5c2a630908bfcddf2143910161061a565b60006106a8828461146b565b92915050565b60008142106109b1576109ae848484426114e1565b93505b509192915050565b33600090815260208190526040902054600114610a185760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b60008281526002602052604090205415610a745760405162461bcd60e51b815260206004820152600d60248201527f6e6f6e2d7a65726f2d646562740000000000000000000000000000000000000060448201526064016104cf565b6000818152600160208190526040822001549003610ad45760405162461bcd60e51b815260206004820152601260248201527f726174652d67726f75702d6e6f742d736574000000000000000000000000000060448201526064016104cf565b600082815260036020526040908190208290555182907f3a8f7e78fe36c54b4f888a309efa91eba128acb04cc1c2ffa0e5c4db7b4a878590610b199084815260200190565b60405180910390a25050565b60008181526001602052604090206003015465ffffffffffff164210610bc5576000818152600160208190526040822090810154600282015460038301549254610b779365ffffffffffff1690611377565b5060008381526001602081905260409091209081019190915560030180547fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000164265ffffffffffff16179055505b50565b33600090815260208190526040902054600114610c275760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b60006b033b2e3c9fd0803ce800000061069e84846110d2565b6000838015610d3257600184168015610cad57859250610cb1565b8392505b50600283046002850494505b8415610d2c578586028687820414610cd457600080fd5b81810181811015610ce457600080fd5b8590049650506001851615610d21578583028387820414158715151615610d0a57600080fd5b81810181811015610d1a57600080fd5b8590049350505b600285049450610cbd565b50610d48565b838015610d425760009250610d46565b8392505b505b509392505050565b600081815260036020526040902054610bc590610b25565b6000818152600160208190526040822090810154815460039092015490919065ffffffffffff164210610dca576000848152600160208190526040909120908101546002820154600390920154610dc7929065ffffffffffff16610999565b91505b6107338282610e84565b33600090815260208190526040902054600114610e335760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260208190526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b60006106a88284610c79565b600082610e9d8382611666565b91508111156109935760405162461bcd60e51b815260206004820152600f60248201527f736166652d7375622d6661696c6564000000000000000000000000000000000060448201526064016104cf565b33600090815260208190526040902054600114610f4d5760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b6000818152600160208190526040822001549003610fad5760405162461bcd60e51b815260206004820152601260248201527f726174652d67726f75702d6e6f742d736574000000000000000000000000000060448201526064016104cf565b600082815260036020526040902054610fc581610b25565b610fce82610b25565b60008381526002602090815260408083205484845260019283905290832090910154909190610ffd9083610e84565b60008481526001602052604090205490915061101a908390611613565b60008481526001602081905260408083209390935586825291902001546110419082610987565b6000868152600260209081526040808320849055878352600190915290205461106a9190611613565b6000858152600160209081526040808320939093558782526003815290829020869055905185815286917fe1033ddc4775544ccda3ab7eb50208593822f29f4e10be3f6b4616eeae5d810c910160405180910390a25050505050565b60006106a8828461162b565b60008115806110f6575082826110e8818361167d565b92506110f4908361162b565b145b6109935760405162461bcd60e51b815260206004820152600f60248201527f736166652d6d756c2d6661696c6564000000000000000000000000000000000060448201526064016104cf565b336000908152602081905260409020546001146111a15760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b827f7261746500000000000000000000000000000000000000000000000000000000036112af57806000036112185760405162461bcd60e51b815260206004820152601c60248201527f726174652d7065722d7365636f6e642d63616e2d6e6f742d62652d300000000060448201526064016104cf565b600082815260016020819052604082200154900361128d5760008281526001602081905260409091206b033b2e3c9fd0803ce80000009181019190915560030180547fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000164265ffffffffffff16179055611296565b61129682610b25565b6000828152600160205260409020600201819055611337565b827f6669786564526174650000000000000000000000000000000000000000000000036112ef576000828152600160205260409020600401819055611337565b60405162461bcd60e51b815260206004820152601160248201527f756e6b6e6f776e20706172616d6574657200000000000000000000000000000060448201526064016104cf565b604080518381526020810183905284917f52e8bd81e873a93db0176f662695e3c80268d53323abc4a4d0fd0676be459d17910160405180910390a2505050565b600080834210156113ca5760405162461bcd60e51b815260206004820152601e60248201527f74696e6c616b652d6d6174682f696e76616c69642d74696d657374616d70000060448201526064016104cf565b856000036113d757600080fd5b60006113e5878787426114e1565b9050806113ff6113f58387610c79565b6103518a88610c79565b925092505094509492505050565b60008261141a8382611613565b91508110156109935760405162461bcd60e51b815260206004820152600f60248201527f736166652d6164642d6661696c6564000000000000000000000000000000000060448201526064016104cf565b60008082116114bc5760405162461bcd60e51b815260206004820152601060248201527f6469766973696f6e206279207a65726f0000000000000000000000000000000060448201526064016104cf565b8161069e6114d6856b033b2e3c9fd0803ce80000006110d2565b61046f856001610e90565b600061150c611506856114f48686611666565b6b033b2e3c9fd0803ce8000000610c92565b86610c79565b95945050505050565b60006020828403121561152757600080fd5b5035919050565b6000806040838503121561154157600080fd5b50508035926020909101359150565b60008060006060848603121561156557600080fd5b505081359360208301359350604090920135919050565b60006020828403121561158e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106a857600080fd5b600080600080608085870312156115c857600080fd5b5050823594602084013594506040840135936060013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611626576116266115e4565b500190565b600082611661577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015611678576116786115e4565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116b5576116b56115e4565b50029056fea26469706673582212208ea7285109a6e4c6df83bbd644d243b79c622782ba2d3c3ffce487ca490f271364736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b95760003560e01c8063744f4cf6116100f9578063b5931f7c11610097578063d7affae311610071578063d7affae3146103af578063dd418ae2146103c2578063e4064a7714610439578063e6cb90131461046157600080fd5b8063b5931f7c14610369578063bf353dbb1461037c578063d05c78da1461039c57600080fd5b80639c52a7f1116100d35780639c52a7f11461031d5780639e1aaae614610330578063a293d1e814610343578063a883b0c41461035657600080fd5b8063744f4cf6146102d757806386c1762a146102ea5780639717411d146102fd57600080fd5b806328a7996f1161016657806358326b7a1161014057806358326b7a1461028b57806365fae35e1461029e57806367457022146102b157806367b870af146102c457600080fd5b806328a7996f1461025257806329a8f4f81461026557806346df2ccb1461027857600080fd5b80631e0029c8116101975780631e0029c8146102195780631ec9f27b1461022c5780632047a2671461023f57600080fd5b806301aa8a6e146101be578063071ffb3c146101f15780630e2286d314610206575b600080fd5b6101de6101cc366004611515565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6102046101ff36600461152e565b610474565b005b6101de61021436600461152e565b610628565b6101de610227366004611515565b6106af565b61020461023a366004611550565b61073b565b61020461024d36600461152e565b61080d565b6101de61026036600461152e565b610987565b6101de610273366004611550565b610999565b61020461028636600461152e565b6109b9565b610204610299366004611515565b610b25565b6102046102ac36600461157c565b610bc8565b6101de6102bf36600461152e565b610c79565b6101de6102d2366004611550565b610c92565b6102046102e5366004611515565b610d50565b6101de6102f8366004611515565b610d68565b6101de61030b366004611515565b60026020526000908152604090205481565b61020461032b36600461157c565b610dd4565b6101de61033e36600461152e565b610e84565b6101de61035136600461152e565b610e90565b61020461036436600461152e565b610eee565b6101de61037736600461152e565b6110c6565b6101de61038a36600461157c565b60006020819052908152604090205481565b6101de6103aa36600461152e565b6110d2565b6102046103bd366004611550565b611142565b6104096103d0366004611515565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909165ffffffffffff9091169085565b6040805195865260208601949094529284019190915265ffffffffffff166060830152608082015260a0016101e8565b61044c6104473660046115b2565b611377565b604080519283526020830191909152016101e8565b6101de61046f36600461152e565b61140d565b336000908152602081905260409020546001146104d85760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064015b60405180910390fd5b6000828152600360208181526040808420548085526001909252909220015465ffffffffffff16421461054d5760405162461bcd60e51b815260206004820152601660248201527f726174652d67726f75702d6e6f742d757064617465640000000000000000000060448201526064016104cf565b60008181526001602052604090206004015461056a908390610c79565b6105749083611613565b600082815260016020819052604082200154919350906105949084610987565b6000858152600260205260409020549091506105b1908290611613565b6000858152600260209081526040808320939093558482526001905220546105da908290611613565b600083815260016020908152604091829020929092555184815285917f4656f63d6d86ffd6679877563f6832dff83d72eb09acf31f29018beaad47ef0e91015b60405180910390a250505050565b60008082116106795760405162461bcd60e51b815260206004820152601060248201527f6469766973696f6e206279207a65726f0000000000000000000000000000000060448201526064016104cf565b8161069e610693856b033b2e3c9fd0803ce80000006110d2565b61046f60028661162b565b6106a8919061162b565b9392505050565b60008181526003602081815260408084205480855260019283905290842091820154919092015465ffffffffffff164210610719576000828152600160208190526040909120908101546002820154600390920154610716929065ffffffffffff16610999565b90505b600084815260026020526040902054610733908290610e84565b949350505050565b3360009081526020819052604090205460011461079a5760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b60008381526001602081815260408084206b033b2e3c9fd0803ce800000093810193909355600380840180547fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000164265ffffffffffff161790556002840196909655600490920193909355929091522055565b3360009081526020819052604090205460011461086c5760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b6000828152600360208181526040808420548085526001909252909220015465ffffffffffff1642146108e15760405162461bcd60e51b815260206004820152601660248201527f726174652d67726f75702d6e6f742d757064617465640000000000000000000060448201526064016104cf565b6000818152600160208190526040822001546108fd9084610987565b60008581526002602052604090205490915061091a908290611613565b600085815260026020908152604080832093909355848252600190522054610943908290611613565b600083815260016020908152604091829020929092555184815285917fb8b26d9635bdf66575907fb44682641f476b48fb70ad5c2a630908bfcddf2143910161061a565b60006106a8828461146b565b92915050565b60008142106109b1576109ae848484426114e1565b93505b509192915050565b33600090815260208190526040902054600114610a185760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b60008281526002602052604090205415610a745760405162461bcd60e51b815260206004820152600d60248201527f6e6f6e2d7a65726f2d646562740000000000000000000000000000000000000060448201526064016104cf565b6000818152600160208190526040822001549003610ad45760405162461bcd60e51b815260206004820152601260248201527f726174652d67726f75702d6e6f742d736574000000000000000000000000000060448201526064016104cf565b600082815260036020526040908190208290555182907f3a8f7e78fe36c54b4f888a309efa91eba128acb04cc1c2ffa0e5c4db7b4a878590610b199084815260200190565b60405180910390a25050565b60008181526001602052604090206003015465ffffffffffff164210610bc5576000818152600160208190526040822090810154600282015460038301549254610b779365ffffffffffff1690611377565b5060008381526001602081905260409091209081019190915560030180547fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000164265ffffffffffff16179055505b50565b33600090815260208190526040902054600114610c275760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b60006b033b2e3c9fd0803ce800000061069e84846110d2565b6000838015610d3257600184168015610cad57859250610cb1565b8392505b50600283046002850494505b8415610d2c578586028687820414610cd457600080fd5b81810181811015610ce457600080fd5b8590049650506001851615610d21578583028387820414158715151615610d0a57600080fd5b81810181811015610d1a57600080fd5b8590049350505b600285049450610cbd565b50610d48565b838015610d425760009250610d46565b8392505b505b509392505050565b600081815260036020526040902054610bc590610b25565b6000818152600160208190526040822090810154815460039092015490919065ffffffffffff164210610dca576000848152600160208190526040909120908101546002820154600390920154610dc7929065ffffffffffff16610999565b91505b6107338282610e84565b33600090815260208190526040902054600114610e335760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260208190526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b60006106a88284610c79565b600082610e9d8382611666565b91508111156109935760405162461bcd60e51b815260206004820152600f60248201527f736166652d7375622d6661696c6564000000000000000000000000000000000060448201526064016104cf565b33600090815260208190526040902054600114610f4d5760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b6000818152600160208190526040822001549003610fad5760405162461bcd60e51b815260206004820152601260248201527f726174652d67726f75702d6e6f742d736574000000000000000000000000000060448201526064016104cf565b600082815260036020526040902054610fc581610b25565b610fce82610b25565b60008381526002602090815260408083205484845260019283905290832090910154909190610ffd9083610e84565b60008481526001602052604090205490915061101a908390611613565b60008481526001602081905260408083209390935586825291902001546110419082610987565b6000868152600260209081526040808320849055878352600190915290205461106a9190611613565b6000858152600160209081526040808320939093558782526003815290829020869055905185815286917fe1033ddc4775544ccda3ab7eb50208593822f29f4e10be3f6b4616eeae5d810c910160405180910390a25050505050565b60006106a8828461162b565b60008115806110f6575082826110e8818361167d565b92506110f4908361162b565b145b6109935760405162461bcd60e51b815260206004820152600f60248201527f736166652d6d756c2d6661696c6564000000000000000000000000000000000060448201526064016104cf565b336000908152602081905260409020546001146111a15760405162461bcd60e51b815260206004820152600e60248201527f6e6f742d617574686f72697a656400000000000000000000000000000000000060448201526064016104cf565b827f7261746500000000000000000000000000000000000000000000000000000000036112af57806000036112185760405162461bcd60e51b815260206004820152601c60248201527f726174652d7065722d7365636f6e642d63616e2d6e6f742d62652d300000000060448201526064016104cf565b600082815260016020819052604082200154900361128d5760008281526001602081905260409091206b033b2e3c9fd0803ce80000009181019190915560030180547fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000164265ffffffffffff16179055611296565b61129682610b25565b6000828152600160205260409020600201819055611337565b827f6669786564526174650000000000000000000000000000000000000000000000036112ef576000828152600160205260409020600401819055611337565b60405162461bcd60e51b815260206004820152601160248201527f756e6b6e6f776e20706172616d6574657200000000000000000000000000000060448201526064016104cf565b604080518381526020810183905284917f52e8bd81e873a93db0176f662695e3c80268d53323abc4a4d0fd0676be459d17910160405180910390a2505050565b600080834210156113ca5760405162461bcd60e51b815260206004820152601e60248201527f74696e6c616b652d6d6174682f696e76616c69642d74696d657374616d70000060448201526064016104cf565b856000036113d757600080fd5b60006113e5878787426114e1565b9050806113ff6113f58387610c79565b6103518a88610c79565b925092505094509492505050565b60008261141a8382611613565b91508110156109935760405162461bcd60e51b815260206004820152600f60248201527f736166652d6164642d6661696c6564000000000000000000000000000000000060448201526064016104cf565b60008082116114bc5760405162461bcd60e51b815260206004820152601060248201527f6469766973696f6e206279207a65726f0000000000000000000000000000000060448201526064016104cf565b8161069e6114d6856b033b2e3c9fd0803ce80000006110d2565b61046f856001610e90565b600061150c611506856114f48686611666565b6b033b2e3c9fd0803ce8000000610c92565b86610c79565b95945050505050565b60006020828403121561152757600080fd5b5035919050565b6000806040838503121561154157600080fd5b50508035926020909101359150565b60008060006060848603121561156557600080fd5b505081359360208301359350604090920135919050565b60006020828403121561158e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106a857600080fd5b600080600080608085870312156115c857600080fd5b5050823594602084013594506040840135936060013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611626576116266115e4565b500190565b600082611661577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015611678576116786115e4565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116b5576116b56115e4565b50029056fea26469706673582212208ea7285109a6e4c6df83bbd644d243b79c622782ba2d3c3ffce487ca490f271364736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "src/Interest/InterestModule.sol:InterestModule",
        "label": "wards",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15584,
        "contract": "src/Interest/InterestModule.sol:InterestModule",
        "label": "rates",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Rate)15579_storage)"
      },
      {
        "astId": 15588,
        "contract": "src/Interest/InterestModule.sol:InterestModule",
        "label": "pie",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 15592,
        "contract": "src/Interest/InterestModule.sol:InterestModule",
        "label": "loanRates",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Rate)15579_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct InterestModule.Rate)",
        "numberOfBytes": "32",
        "value": "t_struct(Rate)15579_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Rate)15579_storage": {
        "encoding": "inplace",
        "label": "struct InterestModule.Rate",
        "members": [
          {
            "astId": 15570,
            "contract": "src/Interest/InterestModule.sol:InterestModule",
            "label": "pie",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 15572,
            "contract": "src/Interest/InterestModule.sol:InterestModule",
            "label": "chi",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 15574,
            "contract": "src/Interest/InterestModule.sol:InterestModule",
            "label": "ratePerSecond",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 15576,
            "contract": "src/Interest/InterestModule.sol:InterestModule",
            "label": "lastUpdated",
            "offset": 0,
            "slot": "3",
            "type": "t_uint48"
          },
          {
            "astId": 15578,
            "contract": "src/Interest/InterestModule.sol:InterestModule",
            "label": "fixedRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint48": {
        "encoding": "inplace",
        "label": "uint48",
        "numberOfBytes": "6"
      }
    }
  }
}